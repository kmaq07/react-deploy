{"version":3,"sources":["components/HomePage.js","components/AboutPsge.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","actionTypes","filter","id","parseInt","emitChange","push","map","courses","CourseList","props","key","onClick","deleteCourse","title","authorId","category","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","saveCourse","fetch","method","headers","body","JSON","stringify","then","catch","courseApi","savedCourse","dispatch","loadCourses","courseId","CoursesPage","useState","setCourses","onchange","courseStore","getCourses","useEffect","addChangeListener","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","onChange","name","value","defaultProps","CourseForm","onSubmit","errors","ManageCoursePage","setErrors","setCourse","match","params","courseActions","getCourseBySlug","event","updatedCourse","target","preventDefault","_errors","Object","keys","formIsValid","history","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e8c319.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1>Pluralsight Administration</h1>\r\n      <p>React, FLux, and React Router for ultra-responsive web apps.</p>\r\n      <Link to=\"/about\" className=\"btn btn-primary\">\r\n        About\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nclass AboutPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>About</h2>\r\n        <p>This app uses</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const activeStyle = { color: \"black\" };\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\r\n        Courses\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Dispatcher } from \"flux\";\r\n\r\nconst dispatcher = new Dispatcher();\r\n\r\nexport default dispatcher;\r\n","export default {\r\n  CREATE_COURSE: \"CREATE_COURSE\",\r\n  UPDATE_COURSE: \"UPDATE_COURSE\",\r\n  DELETE_COURSE: \"DELETE_COURSE\",\r\n  LOAD_COURSES: \"LOAD_COURSES\",\r\n};\r\n","import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypes\";\r\nconst CHANGE_EVENT = \"change\";\r\nlet _courses = [];\r\n\r\nclass CourseStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(\"change\", callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(\"change\", callback);\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n\r\n  getCourses() {\r\n    return _courses;\r\n  }\r\n\r\n  getCourseBySlug(slug) {\r\n    return _courses.find((course) => course.slug === slug);\r\n  }\r\n}\r\n\r\nconst store = new CourseStore();\r\n\r\nDispatcher.register((action) => {\r\n  switch (action.actionType) {\r\n    case actionTypes.DELETE_COURSE:\r\n      _courses = _courses.filter(\r\n        (course) => course.id !== parseInt(action.id, 10)\r\n      );\r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.CREATE_COURSE:\r\n      _courses.push(action.course);\r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.UPDATE_COURSE:\r\n      _courses = _courses.map((course) =>\r\n        course.id === action.course.id ? action.course : course\r\n      );\r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.LOAD_COURSES:\r\n      _courses = action.courses;\r\n      store.emitChange();\r\n      break;\r\n    default:\r\n    // nothing to do here\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseList(props) {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>&nbsp;</th>\r\n          <th>Title</th>\r\n          <th>Author ID</th>\r\n          <th>Category</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.courses.map((course) => {\r\n          return (\r\n            <tr key={course.id}>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-outline-danger\"\r\n                  onClick={() => props.deleteCourse(course.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\r\n              </td>\r\n              <td>{course.authorId}</td>\r\n              <td>{course.category}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nCourseList.propTypes = {\r\n  deleteCourse: PropTypes.func.isRequired,\r\n  courses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      authorId: PropTypes.number.isRequired,\r\n      category: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default CourseList;\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\nexport function handleError(error) {\r\n  console.error(\"API call failed.\" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\r\n\r\nexport function getCourses() {\r\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\r\n}\r\n\r\nexport function getCoursesBySlug(slug) {\r\n  return fetch(baseUrl + \"?slug=\" + slug)\r\n    .then((response) => {\r\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\r\n      return response.json().then((courses) => {\r\n        if (courses.lenght !== 1) throw new Error(\"course not found: \" + slug);\r\n        return courses[0];\r\n      });\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      authorId: parseInt(course.authorId, 10),\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import dispatcher from \"../appDispatcher\";\r\nimport * as courseApi from \"../api/courseApi\";\r\nimport actionType from \"./actionTypes\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport function saveCourse(course) {\r\n  return courseApi.saveCourse(course).then((savedCourse) => {\r\n    //hey dispater go tell all the stores that a course was just created.\r\n    dispatcher.dispatch({\r\n      actionType: course.id\r\n        ? actionTypes.UPDATE_COURSE\r\n        : actionType.CREATE_COURSE,\r\n      course: saveCourse,\r\n    });\r\n  });\r\n}\r\n\r\nexport function loadCourses() {\r\n  return courseApi.getCourses().then((courses) => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.LOAD_COURSES,\r\n      courses: courses,\r\n    });\r\n  });\r\n}\r\n\r\nexport function deleteCourse(id) {\r\n  return courseApi.deleteCourse(id).then(() => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.DELETE_COURSE,\r\n      id: id,\r\n    });\r\n  });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport CourseList from \"./CourseList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\nfunction CoursesPage() {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    courseStore.addChangeListener(onchange);\r\n    if (courseStore.getCourses().length === 0) loadCourses();\r\n    return () => courseStore.removeChangeListener(onchange); //cleanup on unmount\r\n  }, []);\r\n\r\n  function onchange() {\r\n    setCourses(courseStore.getCourses());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Courses</h2>\r\n      <Link className=\"btn btn-primary\" to=\"/course\">\r\n        Add Course\r\n      </Link>\r\n      <CourseList courses={courses} deleteCourse={deleteCourse} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div>\r\n      <h2>Page Not Found</h2>\r\n      <p>\r\n        <Link to=\"/\">Back to Home</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nfunction TextInput(props) {\r\n  let wrapperClass = \"form-group\";\r\n  if (props.error.length > 0) {\r\n    wrapperClass += \" has-error\";\r\n  }\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          value={props.value}\r\n        />\r\n      </div>\r\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  id: propTypes.string.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  label: propTypes.string.isRequired,\r\n  onChange: propTypes.func.isRequired,\r\n  value: propTypes.string,\r\n  error: propTypes.string,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  error: \"\",\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport TextInput from \"./common/TextInput\";\r\nimport PropTypes from \"prop-types\";\r\nfunction CourseForm(props) {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"title\"\r\n        label=\"Title\"\r\n        onChange={props.onChange}\r\n        name=\"title\"\r\n        value={props.course.title}\r\n        error={props.errors.title}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"author\">Author</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id=\"author\"\r\n            name=\"authorId\"\r\n            onChange={props.onChange}\r\n            value={props.course.authorId || \"\"}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Cory House</option>\r\n            <option value=\"2\">Scott Allen</option>\r\n          </select>\r\n        </div>\r\n        {props.errors.authorId && (\r\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\r\n        )}\r\n      </div>\r\n\r\n      <TextInput\r\n        id=\"category\"\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        onChange={props.onChange}\r\n        value={props.course.category}\r\n        error={props.errors.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as courseActions from \"../actions/courseActions\";\r\n\r\nconst ManageCoursePage = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [courses, setCourses] = useState(courseStore.getCourses());\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    authorId: null,\r\n    category: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    courseStore.addChangeListener(onChange);\r\n    const slug = props.match.params.slug; //from the path '/courses/:slug'\r\n    if (courses.length === 0) {\r\n      courseActions.loadCourses();\r\n    } else if (slug) {\r\n      setCourse(courseStore.getCourseBySlug(slug));\r\n    }\r\n    return () => courseStore.removeChangeListener(onChange);\r\n  }, [courses.length, props.match.params.slug]);\r\n\r\n  function onChange() {\r\n    setCourses(courseStore.getCourses());\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const updatedCourse = {\r\n      ...course,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setCourse(updatedCourse);\r\n  }\r\n\r\n  function formIsValid() {\r\n    const _errors = {};\r\n\r\n    if (!course.title) _errors.title = \"Title is required\";\r\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\r\n    if (!course.category) _errors.category = \"Category is required\";\r\n\r\n    setErrors(_errors);\r\n    //Form is valid if the errors object has no properties\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!formIsValid()) return;\r\n    courseActions.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n      toast.success(\"Course saved.\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      <CourseForm\r\n        errors={errors}\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n","import React from \"react\";\r\nimport HomePage from \"./HomePage\";\r\nimport AboutPage from \"./AboutPsge\";\r\nimport Header from \"./common/Header\";\r\nimport CoursesPage from \"./CoursesPage\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport ManageCoursePage from \"./ManageCoursePage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/courses\" component={CoursesPage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\r\n        <Route path=\"/course\" component={ManageCoursePage} />\r\n        <Redirect from=\"/about-page\" to=\"about\" />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}